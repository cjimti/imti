<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Elasticsearch on IMTI</title>
    <link>https://imti.co/tags/elasticsearch/</link>
    <description>Recent content in Elasticsearch on IMTI</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 28 Jul 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://imti.co/tags/elasticsearch/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>FaaS on Kubernetes</title>
      <link>https://imti.co/fass-kubeless-kubernetes/</link>
      <pubDate>Sat, 28 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/fass-kubeless-kubernetes/</guid>
      <description>FaaS or Function as a Service also known as Serverless computing implementations are gaining popularity. Discussed often are the cost savings and each implementations relationship to the physical and network architecture of a specific platform or vendor. While many of the cost and infrastructure advantages of FaaS are compelling, its only one of many advantages. Below, I hope to demonstrate how easy it is to develop and deploy FaaS components into a custom Kubernetes cluster.</description>
    </item>
    
    <item>
      <title>Elasticsearch Essential Queries</title>
      <link>https://imti.co/elasticsearch-essential-queries/</link>
      <pubDate>Thu, 26 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/elasticsearch-essential-queries/</guid>
      <description>The following is an overview for querying Elasticsearch. Over the years I have tried to assemble developer notes for myself and my team on a variety of platforms, languages and frameworks, a type of cheat-sheet but with context, not a comprehensive how-to, but a decent 15-minute overview of the features we are most likely to implement in a given iteration.
Explore the Elasticsearch official documentation: Search in Depth.
 Contents   Motivation Following Along with Elasticsearch and Kubernetes Vocabulary Basic CRUD API  Delete an Index Create an Index Create or Update a Document (Upsert) Get a Document   Mappings, Types and Metadata  Get Mapping Create a Mapping   Searching Range Filtering Aggregations  Counts Averages, Minimums and Maximums Percentile Percent by Rank Percent by Rank Interval   Resources     Support this blog!</description>
    </item>
    
    <item>
      <title>Remote Query Elasticsearch on Kubernetes</title>
      <link>https://imti.co/remote-query-kubernetes-elasticsearch/</link>
      <pubDate>Wed, 25 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/remote-query-kubernetes-elasticsearch/</guid>
      <description>Developing on our local workstations has always been a conceptual challenge for my team when it comes to remote data access. Local workstation-based development of services that intend to connect to a wide range of remote services that may have no options for external connections poses a challenge. Mirroring the entire development environment is possible in many cases, just not practical.
In days before Kubernetes, writing code in IDEs on our local workstation meant we had only a few options for developing server-side-API-style services that needed to connect to a database.</description>
    </item>
    
    <item>
      <title>High Traffic JSON Data into Elasticsearch on Kubernetes</title>
      <link>https://imti.co/post-json-elasticsearch-kubernetes/</link>
      <pubDate>Wed, 18 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/post-json-elasticsearch-kubernetes/</guid>
      <description>IOT devices, Point-of-Sale systems, application events or any client that sends data destined for indexing in Elasticsearch often need to send and forget, however, unless that data is of low value there needs to be assurance that arrives at its final destination. Back-pressure and database outages can pose a considerable threat to data integrity.
 Contents   Background Overview Development Environment  the-project Namespace   The Project: Weather (wx) Data rxtx for Store-and-Forward  wx-rxtx Service wx-rxtx StatefulSet   rtBeat to Collect, Buffer and Publish  wx-rtbeat Service wx-rtbeat ConfigMap wx-rtbeat Deployment   Client Simulation / Kubernetes Cron Performance Conclusion Port Forwarding / Local Development Reference     Support this blog!</description>
    </item>
    
    <item>
      <title>Kibana on Kubernetes</title>
      <link>https://imti.co/kibana-kubernetes/</link>
      <pubDate>Sun, 15 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/kibana-kubernetes/</guid>
      <description>This guide walks through a process for setting up Kibana within a namespace on a Kubernetes cluster. If you followed along with Production Grade Elasticsearch on Kubernetes then aside from personal or corporate preferences, little modifications are necessary for the configurations below.
 Contents   Project Namespace Service Kibana ConfigMap Deployment Basic Auth (Optional) TLS Certificate (Optional) Ingress Conclusion Port Forwarding / Local Development Resources     Support this blog!</description>
    </item>
    
    <item>
      <title>Production Grade Elasticsearch on Kubernetes</title>
      <link>https://imti.co/kubernetes-production-elasticsearch/</link>
      <pubDate>Sat, 14 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/kubernetes-production-elasticsearch/</guid>
      <description>Installing production ready, Elasticsearch 6.2 on Kubernetes requires a hand full of simple configurations. The following guide is a high-level overview of an installation process using Elastic&amp;rsquo;s recommendations for best practices. The Github project kubernetes-elasticsearch-cluster is used for the Elastic Docker container and built to operate Elasticsearch with nodes dedicated as Master, Data, and Client/Ingest.
The Docker container docker-elasticsearch, a &amp;ldquo;Ready to use, lean and highly configurable Elasticsearch container image.&amp;rdquo; by pires is sufficient for use in this guide.</description>
    </item>
    
  </channel>
</rss>