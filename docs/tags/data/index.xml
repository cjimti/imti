<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data on IMTI</title>
    <link>https://imti.co/tags/data/</link>
    <description>Recent content in Data on IMTI</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 25 Sep 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://imti.co/tags/data/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kafka on Kubernetes</title>
      <link>https://imti.co/kafka-kubernetes/</link>
      <pubDate>Tue, 25 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/kafka-kubernetes/</guid>
      <description>Kafka is a fast, horizontally scalable, fault-tolerant, message queue service. Kafka is used for building real-time data pipelines and streaming apps.
There are a few Helm based installers out there including the official Kubernetes incubator/kafka. However, in this article, I walk through applying a surprisingly small set of Kubernetes configuration files needed to stand up high performance, highly available Kafka. Manually applying Kubernetes configurations gives you a step-by-step understanding of the system you are deploying and limitless opportunities to customize.</description>
    </item>
    
    <item>
      <title>Elasticsearch Essential Queries</title>
      <link>https://imti.co/elasticsearch-essential-queries/</link>
      <pubDate>Thu, 26 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/elasticsearch-essential-queries/</guid>
      <description>The following is an overview for querying Elasticsearch. Over the years I have tried to assemble developer notes for myself and my team on a variety of platforms, languages and frameworks, a type of cheat-sheet but with context, not a comprehensive how-to, but a decent 15-minute overview of the features we are most likely to implement in a given iteration.
Explore the Elasticsearch official documentation: Search in Depth.
 Contents     Motivation Following Along with Elasticsearch and Kubernetes Vocabulary Basic CRUD API  Delete an Index Create an Index Create or Update a Document (Upsert) Get a Document  Mappings, Types and Metadata  Get Mapping Create a Mapping  Searching Range Filtering Aggregations  Counts Averages, Minimums and Maximums Percentile Percent by Rank Percent by Rank Interval  Resources        (adsbygoogle = window.</description>
    </item>
    
    <item>
      <title>Remote Query Elasticsearch on Kubernetes</title>
      <link>https://imti.co/remote-query-kubernetes-elasticsearch/</link>
      <pubDate>Wed, 25 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/remote-query-kubernetes-elasticsearch/</guid>
      <description>Developing on our local workstations has always been a conceptual challenge for my team when it comes to remote data access. Local workstation-based development of services that intend to connect to a wide range of remote services that may have no options for external connections poses a challenge. Mirroring the entire development environment is possible in many cases, just not practical.
In days before Kubernetes, writing code in IDEs on our local workstation meant we had only a few options for developing server-side-API-style services that needed to connect to a database.</description>
    </item>
    
    <item>
      <title>High Traffic JSON Data into Elasticsearch on Kubernetes</title>
      <link>https://imti.co/post-json-elasticsearch-kubernetes/</link>
      <pubDate>Wed, 18 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/post-json-elasticsearch-kubernetes/</guid>
      <description>IOT devices, Point-of-Sale systems, application events or any client that sends data destined for indexing in Elasticsearch often need to send and forget, however, unless that data is of low value there needs to be assurance that arrives at its final destination. Back-pressure and database outages can pose a considerable threat to data integrity.
 Contents     Background Overview Development Environment  the-project Namespace  The Project: Weather (wx) Data rxtx for Store-and-Forward  wx-rxtx Service wx-rxtx StatefulSet  rtBeat to Collect, Buffer and Publish  wx-rtbeat Service wx-rtbeat ConfigMap wx-rtbeat Deployment  Client Simulation / Kubernetes Cron Performance Conclusion Reference     Background High availability and high performance often mean burdensome complexity.</description>
    </item>
    
    <item>
      <title>Kibana on Kubernetes</title>
      <link>https://imti.co/kibana-kubernetes/</link>
      <pubDate>Sun, 15 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/kibana-kubernetes/</guid>
      <description>This guide walks through a process for setting up Kibana within a namespace on a Kubernetes cluster. If you followed along with Production Grade Elasticsearch on Kubernetes then aside from personal or corporate preferences, little modifications are necessary for the configurations below.
 Contents     Project Namespace Service Kibana ConfigMap Deployment Basic Auth TLS Certificate (Optional) Ingress Conclusion Resources        (adsbygoogle = window.</description>
    </item>
    
    <item>
      <title>Production Grade Elasticsearch on Kubernetes</title>
      <link>https://imti.co/kubernetes-production-elasticsearch/</link>
      <pubDate>Sat, 14 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/kubernetes-production-elasticsearch/</guid>
      <description>Installing production ready, Elasticsearch 6.2 on Kubernetes requires a hand full of simple configurations. The following guide is a high-level overview of an installation process using Elastic&amp;rsquo;s recommendations for best practices. The Github project kubernetes-elasticsearch-cluster is used for the Elastic Docker container and built to operate Elasticsearch with nodes dedicated as Master, Data, and Client/Ingest.
The Docker container docker-elasticsearch, a &amp;ldquo;Ready to use, lean and highly configurable Elasticsearch container image.</description>
    </item>
    
    <item>
      <title>Python Data Essentials - Matplotlib and Seaborn</title>
      <link>https://imti.co/python-data-essentials-matplotlib-seaborn/</link>
      <pubDate>Sun, 08 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/python-data-essentials-matplotlib-seaborn/</guid>
      <description>There is an overwhelming number of options for developers needing to provide data visualization. The most popular library for data visualization in Python is Matplotlib, and built directly on top of Matplotlib is Seaborn. The Seaborn library is &amp;ldquo;tightly integrated with the PyData stack, including support for numpy and pandas data structures and statistical routines from scipy and statsmodels.&amp;rdquo;
This article is only intended to get you started with Matplotlib and Seaborn.</description>
    </item>
    
    <item>
      <title>Webpage to PDF Microservice</title>
      <link>https://imti.co/webpage-to-pdf-microservice/</link>
      <pubDate>Sun, 01 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/webpage-to-pdf-microservice/</guid>
      <description>I create a lot of data visualizations for clients, many of which are internal, portal-style websites that present data in real time, as well as give options for viewing reports from previous time-frames. PDFs are useful for data such as bank statements or any form of time-snapshot progress reporting. It is common for clients to want PDF versions generated on a regular basis for sharing through email or other technologies.</description>
    </item>
    
    <item>
      <title>Python Data Essentials - Pandas</title>
      <link>https://imti.co/python-data-essentials-pandas/</link>
      <pubDate>Sun, 17 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/python-data-essentials-pandas/</guid>
      <description>Pandas bring Python a data type equivalent to super-charged spreadsheets. Pandas add two highly expressive data structures to Python, Series and DataFrame. Pandas Series and DataFrames provide a performant analysis and manipulation of “relational” or “labeled” data similar to relational database tables like MySQL or the rows and columns of Excel. Pandas are great for working with time series data as well as arbitrary matrix data, and unlabeled data.</description>
    </item>
    
    <item>
      <title>Python Data Essentials - Numpy</title>
      <link>https://imti.co/python-data-essentials-numpy/</link>
      <pubDate>Sat, 16 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/python-data-essentials-numpy/</guid>
      <description>Python is one of The Most Popular Languages for Data Science, and because of this adoption by the data science community, we have libraries like NumPy, Pandas and Matplotlib. NumPy at it&amp;rsquo;s core provides a powerful N-dimensional array objects in which we can perform linear algebra, Pandas give us data structures and data analysis tools, similar to working with a specialized database or powerful spreadsheets and finally Matplotlib to generate plots, histograms, power spectra, bar charts, error charts and scatterplots to name a few.</description>
    </item>
    
    <item>
      <title>SQL Foundations</title>
      <link>https://imti.co/sql-select-joins-aliases/</link>
      <pubDate>Mon, 02 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/sql-select-joins-aliases/</guid>
      <description>The following is an attempt at explaining the basics of an SQL query, and more importantly how I believe you can best think through them. All queries can be broken down into the basics of this declarative language.
I recently helped a co-worker read through a large SQL query with a few dozen joins and left joins, alias, and recursions. He is mostly a front-end integrator and although he has been tinkering with SQL for years, he never really understood the basics.</description>
    </item>
    
    <item>
      <title>Don&#39;t Install cqlsh</title>
      <link>https://imti.co/dont-install-cqlsh/</link>
      <pubDate>Thu, 01 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/dont-install-cqlsh/</guid>
      <description>We live in a world of process isolation and tools that make utilizing it extremely simple, with apps like Docker we can perform dependency management with dependency isolation. As I am slowly becoming a fanboy of containerization, I look forward to the day when typing ps on my local workstation or remote server is nearly synonymous with commands like docker ps or kubectl get services.
Case: Cassandra development and your local workstation.</description>
    </item>
    
  </channel>
</rss>