<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Development on IMTI</title>
    <link>https://imti.co/tags/development/</link>
    <description>Recent content in Development on IMTI</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 11 Aug 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://imti.co/tags/development/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kubernetes Port Forwarding for Local Development</title>
      <link>https://imti.co/kubernetes-port-forwarding/</link>
      <pubDate>Sat, 11 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/kubernetes-port-forwarding/</guid>
      <description>kubefwd helps to enable a seamless and efficient way to develop applications and services on a local workstation. Locally develop applications that intend to interact with other services in a Kubernetes cluster. kubefwd allows applications with connection strings like http://elasticsearch:9200/ or tcp://db:3306 to communicate into the remote cluster. kubefwd can be used to reduce or eliminate the need for local environment specific connection configurations.
I don&amp;#39;t run Kubernetes locally, but I do depend on services running in remote clusters.</description>
    </item>
    
    <item>
      <title>Raspberry Pi 3 - WiFi Station&#43;AP</title>
      <link>https://imti.co/iot-wifi/</link>
      <pubDate>Thu, 15 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/iot-wifi/</guid>
      <description>Update: Looking for contributors.
   Golang Size Pulls           IOT Wifi is very small/8MB Docker Container built for the Raspberry Pi 3. IOT Wifi exposes a simple JSON based REST API for controlling the wireless network interface. This container allows the Raspberry Pi to accept wifi connections as an access point (aka AP) while at the same time connecting to an existing wifi network (station mode).</description>
    </item>
    
    <item>
      <title>Raspberry Pi - Serial Number</title>
      <link>https://imti.co/raspberry-pi-serial/</link>
      <pubDate>Mon, 13 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/raspberry-pi-serial/</guid>
      <description>Getting the unique serial number from a Raspberry Pi.
cat /proc/cpuinfo | grep ^Serial | cut -d&amp;quot;:&amp;quot; -f2  Example output:
 00000000e215b4a2  An interesting use for this is &amp;ldquo;binding&amp;rdquo; software, encryption or other servcies to a specific Pi. Found this in a suggestion on the Stack Overflow question &amp;ldquo;Securing data on SD card Raspberry Pi&amp;rdquo;</description>
    </item>
    
  </channel>
</rss>