<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kubernetes on IMTI</title>
    <link>https://imti.co/tags/kubernetes/</link>
    <description>Recent content in Kubernetes on IMTI</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 25 Sep 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://imti.co/tags/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kafka on Kubernetes</title>
      <link>https://imti.co/kafka-kubernetes/</link>
      <pubDate>Tue, 25 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/kafka-kubernetes/</guid>
      <description>Kafka is a fast, horizontally scalable, fault-tolerant, message queue service. Kafka is used for building real-time data pipelines and streaming apps.
There are a few Helm based installers out there including the official Kubernetes incubator/kafka. However, in this article, I walk through applying a surprisingly small set of Kubernetes configuration files needed to stand up high performance, highly available Kafka. Manually applying Kubernetes configurations gives you a step-by-step understanding of the system you are deploying and limitless opportunities to customize.</description>
    </item>
    
    <item>
      <title>Ethereum Blockchain on Kubernetes</title>
      <link>https://imti.co/ethereum-kubernetes/</link>
      <pubDate>Tue, 04 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/ethereum-kubernetes/</guid>
      <description>Blockchain technologies have been made famous by Cryptocurrencies such as Bitcoin and Ethereum. However, the concepts behind Blockchain are far more reaching than their support for cryptocurrency. Blockchain technologies now support any digital asset, from signal data to complex messaging, to the execution of business logic through code. Blockchain technologies are rapidly forming a new decentralized internet of transactions.
Kubernetes is an efficient and productive platform for the configuration, deployment, and management of private blockchains.</description>
    </item>
    
    <item>
      <title>Kubernetes Port Forwarding for Local Development</title>
      <link>https://imti.co/kubernetes-port-forwarding/</link>
      <pubDate>Sat, 11 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/kubernetes-port-forwarding/</guid>
      <description>kubefwd helps to enable a seamless and efficient way to develop applications and services on a local workstation. Locally develop applications that intend to interact with other services in a Kubernetes cluster. kubefwd allows applications with connection strings like http://elasticsearch:9200/ or tcp://db:3306 to communicate into the remote cluster. kubefwd can be used to reduce or eliminate the need for local environment specific connection configurations.
I don&amp;#39;t run Kubernetes locally, but I do depend on services running in remote clusters.</description>
    </item>
    
    <item>
      <title>FaaS on Kubernetes</title>
      <link>https://imti.co/fass-kubeless-kubernetes/</link>
      <pubDate>Sat, 28 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/fass-kubeless-kubernetes/</guid>
      <description>FaaS or Function as a Service also known as Serverless computing implementations are gaining popularity. Discussed often are the cost savings and each implementations relationship to the physical and network architecture of a specific platform or vendor. While many of the cost and infrastructure advantages of FaaS are compelling, its only one of many advantages. Below, I hope to demonstrate how easy it is to develop and deploy FaaS components into a custom Kubernetes cluster.</description>
    </item>
    
    <item>
      <title>Remote Query Elasticsearch on Kubernetes</title>
      <link>https://imti.co/remote-query-kubernetes-elasticsearch/</link>
      <pubDate>Wed, 25 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/remote-query-kubernetes-elasticsearch/</guid>
      <description>Developing on our local workstations has always been a conceptual challenge for my team when it comes to remote data access. Local workstation-based development of services that intend to connect to a wide range of remote services that may have no options for external connections poses a challenge. Mirroring the entire development environment is possible in many cases, just not practical.
In days before Kubernetes, writing code in IDEs on our local workstation meant we had only a few options for developing server-side-API-style services that needed to connect to a database.</description>
    </item>
    
    <item>
      <title>High Traffic JSON Data into Elasticsearch on Kubernetes</title>
      <link>https://imti.co/post-json-elasticsearch-kubernetes/</link>
      <pubDate>Wed, 18 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/post-json-elasticsearch-kubernetes/</guid>
      <description>IOT devices, Point-of-Sale systems, application events or any client that sends data destined for indexing in Elasticsearch often need to send and forget, however, unless that data is of low value there needs to be assurance that arrives at its final destination. Back-pressure and database outages can pose a considerable threat to data integrity.
 Contents   Background Overview Development Environment  the-project Namespace   The Project: Weather (wx) Data rxtx for Store-and-Forward  wx-rxtx Service wx-rxtx StatefulSet   rtBeat to Collect, Buffer and Publish  wx-rtbeat Service wx-rtbeat ConfigMap wx-rtbeat Deployment   Client Simulation / Kubernetes Cron Performance Conclusion Port Forwarding / Local Development Reference     Please support my new book!</description>
    </item>
    
    <item>
      <title>Kibana on Kubernetes</title>
      <link>https://imti.co/kibana-kubernetes/</link>
      <pubDate>Sun, 15 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/kibana-kubernetes/</guid>
      <description>This guide walks through a process for setting up Kibana within a namespace on a Kubernetes cluster. If you followed along with Production Grade Elasticsearch on Kubernetes then aside from personal or corporate preferences, little modifications are necessary for the configurations below.
 Contents   Project Namespace Service Kibana ConfigMap Deployment Basic Auth (Optional) TLS Certificate (Optional) Ingress Conclusion Port Forwarding / Local Development Resources     Please support my new book!</description>
    </item>
    
    <item>
      <title>Production Grade Elasticsearch on Kubernetes</title>
      <link>https://imti.co/kubernetes-production-elasticsearch/</link>
      <pubDate>Sat, 14 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/kubernetes-production-elasticsearch/</guid>
      <description>Installing production ready, Elasticsearch 6.2 on Kubernetes requires a hand full of simple configurations. The following guide is a high-level overview of an installation process using Elastic&amp;rsquo;s recommendations for best practices. The Github project kubernetes-elasticsearch-cluster is used for the Elastic Docker container and built to operate Elasticsearch with nodes dedicated as Master, Data, and Client/Ingest.
The Docker container docker-elasticsearch, a &amp;ldquo;Ready to use, lean and highly configurable Elasticsearch container image.&amp;rdquo; by pires is sufficient for use in this guide.</description>
    </item>
    
    <item>
      <title>Kubernetes Team Access - RBAC for developers and QA</title>
      <link>https://imti.co/team-kubernetes-remote-access/</link>
      <pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/team-kubernetes-remote-access/</guid>
      <description>RBAC (Role Based Access Control) allows our Kubernetes clusters to provide the development team better visibility and access into the development, staging and production environments than it has have ever had in the past. Developers using the command line tool kubectl, can explore the network topology of running microservices, tail live server logs, proxy local ports directly to services or even execute shells into running pods.
Kubernetes and GitlabCI are the central components of our DevOps toolchain and have increased our productivity by many multiples over the traditional approaches of the past.</description>
    </item>
    
    <item>
      <title>Webpage to PDF Microservice</title>
      <link>https://imti.co/webpage-to-pdf-microservice/</link>
      <pubDate>Sun, 01 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/webpage-to-pdf-microservice/</guid>
      <description>I create a lot of data visualizations for clients, many of which are internal, portal-style websites that present data in real time, as well as give options for viewing reports from previous time-frames. PDFs are useful for data such as bank statements or any form of time-snapshot progress reporting. It is common for clients to want PDF versions generated on a regular basis for sharing through email or other technologies.</description>
    </item>
    
    <item>
      <title>CORS on Kubernetes Ingress Nginx</title>
      <link>https://imti.co/kubernetes-ingress-nginx-cors/</link>
      <pubDate>Mon, 28 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/kubernetes-ingress-nginx-cors/</guid>
      <description>Using ingress-nginx on Kubernetes makes adding CORS headers painless. Kubernetes ingress-nginx uses annotations as a quick way to allow you to specify the automatic generation of an extensive list of common nginx configuration options.
Example ingress configuration enabling CORS:
apiVersion: extensions/v1beta1 kind: Ingress metadata: name: api namespace: fuse labels: app: api annotations: nginx.ingress.kubernetes.io/enable-cors: &amp;#34;true&amp;#34; nginx.ingress.kubernetes.io/cors-allow-methods: &amp;#34;PUT, GET, POST, OPTIONS&amp;#34; nginx.ingress.kubernetes.io/cors-allow-origin: &amp;#34;https://admin.example.com&amp;#34; nginx.ingress.kubernetes.io/cors-allow-credentials: &amp;#34;true&amp;#34; spec: rules: - host: api.example.com http: paths: - backend: serviceName: api-example servicePort: 80 path: /api tls: - hosts: - api.</description>
    </item>
    
    <item>
      <title>Basic Auth on Kubernetes Ingress</title>
      <link>https://imti.co/kubernetes-ingress-basic-auth/</link>
      <pubDate>Sat, 19 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/kubernetes-ingress-basic-auth/</guid>
      <description>Basic Auth is one of the oldest and easiest ways to secure a web page or API endpoint. Basic Auth does not have many features and lacks the sophistication of more modern access controls (see Ingress Nginx Auth Examples). However, Basic Auth is supported by nearly every major web client, library, and utility. Basic Auth is secure, stable and perfect for quick security on Kubernetes projects. Basic Auth can easily we swapped out later as requirements demand or provide a foundation for implementations such as OAuth 2 and JWT.</description>
    </item>
    
    <item>
      <title>JWT Microservice, Tokenize Remote APIs</title>
      <link>https://imti.co/jwt-microservice/</link>
      <pubDate>Fri, 18 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/jwt-microservice/</guid>
      <description>txToken is a small high performance microservice utility container. txToken is used for adding JSON Web Token based security to existing or new API development. txToken is specifically for systems that communicate in JSON over HTTP. txToken is called from a client with a JSON post body and passes received JSON to a remote endpoint. JSON retrieved from a remote endpoint is used to create a JWT token with an HS256 symmetrically encrypted signature.</description>
    </item>
    
    <item>
      <title>Let&#39;s Encrypt, Kubernetes</title>
      <link>https://imti.co/lets-encrypt-kubernetes/</link>
      <pubDate>Fri, 18 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/lets-encrypt-kubernetes/</guid>
      <description>Use cert-manager to get port 443/https running with signed x509 certificates for Ingress on your Kubernetes Production Hobby Cluster. cert-manager is the successor to kube-lego and the preferred way to &amp;ldquo;automatically obtain browser-trusted certificates, without any human intervention.&amp;rdquo; using Let&amp;rsquo;s Encrypt.
You need to install Helm first if you do not already have it. Otherwise, check out my article Helm on Custom Kubernetes, especially if you are following along with my Production Hobby Cluster guides.</description>
    </item>
    
    <item>
      <title>Helm on Custom Kubernetes</title>
      <link>https://imti.co/helm-on-custom-cluster/</link>
      <pubDate>Thu, 17 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/helm-on-custom-cluster/</guid>
      <description>Helm is the official package manager for Kubernetes. If you are looking to start using Helm or want to test its capabilities, I suggest you set up a Production Hobby Cluster. This article is a continuation of the Production Hobby Cluster configuration but should be entirely useful on its own.
 From https://github.com/kubernetes/helm
 Helm has two parts: a client (helm) and a server (tiller) Tiller runs inside of your Kubernetes cluster and manages releases (installations) of your charts.</description>
    </item>
    
    <item>
      <title>Kubernetes Custom Upstream DNS</title>
      <link>https://imti.co/kubernetes-custom-dns/</link>
      <pubDate>Thu, 17 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/kubernetes-custom-dns/</guid>
      <description>Customize the Upstream Nameservers used by kube-dns by Pods when looking up external hostnames from within a Kubernetes cluster. I found that adding custom Upstream Nameservers to my kube-dns solved many issues encountered in in the past with external hostname resolution on individual Pods.
If you want to experiment on a production-like cluster, I suggest reading my article &amp;ldquo;Production Hobby Cluster&amp;rdquo; for a guide on setting up a fun, cheap-yet-robust experimental cluster.</description>
    </item>
    
    <item>
      <title>Ingress on Custom Kubernetes</title>
      <link>https://imti.co/web-cluster-ingress/</link>
      <pubDate>Tue, 15 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/web-cluster-ingress/</guid>
      <description>There are more than a handful of ways to set up port 80 and 443 web ingress on a custom Kubernetes cluster. Specifically a bare metal cluster. If you are looking to experiment or learn on a non-production cluster, but something more true to production than minikube, I suggest you check out my previous article Production Hobby Cluster, a step-by-step guide for setting up a custom production capable Kubernetes cluster.</description>
    </item>
    
    <item>
      <title>kubectl Context Multiple Clusters</title>
      <link>https://imti.co/kubectl-remote-context/</link>
      <pubDate>Tue, 15 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/kubectl-remote-context/</guid>
      <description>I use a few Kubernetes clusters on a daily basis, and I use kubectl to access and configure them from my workstation. There are dozens of ways to configure kubectl however I find the following method the easiest for me to manage and not make a mess.
I also set up test clusters from time-to-time, and so keeping my configs organized is, so I don&amp;rsquo;t confuse myself or make a mess.</description>
    </item>
    
    <item>
      <title>Kubectl x509 Unable to Connect</title>
      <link>https://imti.co/kubectl-remote-x509-valid/</link>
      <pubDate>Thu, 10 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/kubectl-remote-x509-valid/</guid>
      <description>Just set up a brand new cluster? Changed the domain or IP of your admin node? Then you may have encountered the error Unable to connect to the server: x509: certificate is valid for &amp;hellip;. The following is a fix for this common issue. However, there are often other reasons to rebuild your cluster cert, and it&amp;rsquo;s relatively easy.
TL;DR: &amp;ldquo;I don&amp;rsquo;t care about the fix I need to remote control my cluster.</description>
    </item>
    
    <item>
      <title>Production Hobby Cluster</title>
      <link>https://imti.co/hobby-cluster/</link>
      <pubDate>Wed, 09 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/hobby-cluster/</guid>
      <description>Setting up a production-grade Kubernetes cluster can be done on a hobby budget, and if this is true why mess around with a lesser grade. If you are investing time to learn distributed cloud computing or microservices, is the distance between $0 and 15 dollars a month worth the time in translating best practices? Kubernetes is designed to host production applications. My personal web applications may only be hobbies, but they might as well be production grade hobbies.</description>
    </item>
    
    <item>
      <title>Kubernetes - 413 Request Entity Too Large</title>
      <link>https://imti.co/413-request-entity-too-large/</link>
      <pubDate>Sat, 24 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/413-request-entity-too-large/</guid>
      <description>When setting up nginx ingress on Kubernetes for a private Docker Registry, I ran into an error when trying to push an image to it.
Error parsing HTTP response: invalid character &#39;&amp;lt;&#39; looking for beginning of value: &amp;quot;&amp;lt;html&amp;gt;\r\n&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;413 Request Entity Too Large&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;\r\n&amp;lt;body bgcolor=\&amp;quot;white\&amp;quot;&amp;gt;\r\n&amp;lt;center&amp;gt;&amp;lt;h1&amp;gt;413 Request Entity Too Large&amp;lt;/h1&amp;gt;&amp;lt;/center&amp;gt;\r\n&amp;lt;hr&amp;gt;&amp;lt;center&amp;gt;nginx/1.9.14&amp;lt;/center&amp;gt;\r\n&amp;lt;/body&amp;gt;\r\n&amp;lt;/html&amp;gt;\r\n&amp;quot; The &amp;ldquo;413 Request Entity Too Large&amp;rdquo; error is something many accustomed to running nginx as a standard web server/proxy. nginx is configured to restrict the size of files it will allow over a post.</description>
    </item>
    
    <item>
      <title>Kubernetes Remote Control</title>
      <link>https://imti.co/kubectl-remote/</link>
      <pubDate>Sat, 24 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/kubectl-remote/</guid>
      <description>I use Minikube to run a local Kubernetes single node cluster (cluster?). However, I also work with a custom production cluster for work. This cluster consists of development and production nodes. I often need to switch between working on my local Minikube and the online Kubernetes cluster.
TIP: Visit the kubectl Cheat Sheet often.
 Please support my new book!      Advanced Platform Development with Kubernetes: Enabling Data Management, the Internet of Things, Blockchain, and Machine Learning What You&#39;ll Learn Use data pipelines with MQTT, NiFi, Logstash, Kafka and Elasticsearch Install a serverless platform with OpenFaaS Explore blockchain network capabilities with Ethereum Support a multi-tenant data science platform and web IDE with JupyterHub, MLflow and Seldon Core Build a hybrid cluster, securely bridging on-premise and cloud-based Kubernetes nodes Implement an integrated development toolchain for continuous integration and deployment     The default configuration kubectl is stored in ~/.</description>
    </item>
    
    <item>
      <title>Microservices &amp; Kubernetes</title>
      <link>https://imti.co/microservices/</link>
      <pubDate>Sat, 24 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/microservices/</guid>
      <description>The following is a collection of articles, videos, and notes on Microservices. The Microservices architecture is a variant of the service-oriented architecture (SOA), a collection of loosely coupled services.
Articles  Background concept - &amp;ldquo;Open Data: Small Pieces Loosely Joined&amp;rdquo;, Tim O’Reilly Modern software design problems and solutions - &amp;ldquo;12-Fractured Apps&amp;rdquo;, Kelsey Hightower (SysAdmin @ Google) 12-Factor Defined - &amp;ldquo;The 12-Factor App&amp;rdquo;, Adam Wiggins Pros and Cons of Microservices - &amp;ldquo;Microservices&amp;rdquo; and Microservice Trade-Offs, Martin Fowler &amp;ldquo;What are containers and why do you need them?</description>
    </item>
    
    <item>
      <title>Kubernetes Overview</title>
      <link>https://imti.co/kubernetes/</link>
      <pubDate>Thu, 01 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/kubernetes/</guid>
      <description>Getting started with Kubernetes for local development. I develop on a Mac however much of this is easily translated to windows.
The following is primarily a getting started guide wrapped around my personal development notes. This set of notes are specifically for my co-workers in helping them get up to speed quickly. If you see an error feel free to make a pull request or just add an issue.
Contents  Deeper Reading and Resources  Free Courses Paid Courses   Prerequisites Test Installation Get some status  Architecture   Create a Deployment Useful Commands  Deeper Reading and Resources Free Courses  Official Kubernetes Tutorials Udacity: Scalable Microservices with Kubernetes Kubernetes The Hard Way For anyone planning to support a production Kubernetes cluster and wants to understand how everything fits together.</description>
    </item>
    
  </channel>
</rss>