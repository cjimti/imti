<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kubectl on IMTI</title>
    <link>https://imti.co/tags/kubectl/</link>
    <description>Recent content in kubectl on IMTI</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 10 Jul 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://imti.co/tags/kubectl/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kubernetes Team Access - RBAC for developers and QA</title>
      <link>https://imti.co/team-kubernetes-remote-access/</link>
      <pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/team-kubernetes-remote-access/</guid>
      <description>RBAC (Role Based Access Control) allows our Kubernetes clusters to provide the development team better visibility and access into the development, staging and production environments than it has have ever had in the past. Developers using the command line tool kubectl, can explore the network topology of running microservices, tail live server logs, proxy local ports directly to services or even execute shells into running pods.
Kubernetes and GitlabCI are the central components of our DevOps toolchain and have increased our productivity by many multiples over the traditional approaches of the past.</description>
    </item>
    
    <item>
      <title>kubectl Context Multiple Clusters</title>
      <link>https://imti.co/kubectl-remote-context/</link>
      <pubDate>Tue, 15 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/kubectl-remote-context/</guid>
      <description>I use a few Kubernetes clusters on a daily basis, and I use kubectl to access and configure them from my workstation. There are dozens of ways to configure kubectl however I find the following method the easiest for me to manage and not make a mess.
I also set up test clusters from time-to-time, and so keeping my configs organized is, so I don&amp;rsquo;t confuse myself or make a mess.</description>
    </item>
    
    <item>
      <title>Kubectl x509 Unable to Connect</title>
      <link>https://imti.co/kubectl-remote-x509-valid/</link>
      <pubDate>Thu, 10 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/kubectl-remote-x509-valid/</guid>
      <description>Just set up a brand new cluster? Changed the domain or IP of your admin node? Then you may have encountered the error Unable to connect to the server: x509: certificate is valid for &amp;hellip;. The following is a fix for this common issue. However, there are often other reasons to rebuild your cluster cert, and it&amp;rsquo;s relatively easy.
TL;DR: &amp;ldquo;I don&amp;rsquo;t care about the fix I need to remote control my cluster.</description>
    </item>
    
    <item>
      <title>Kubernetes Remote Control</title>
      <link>https://imti.co/kubectl-remote/</link>
      <pubDate>Sat, 24 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imti.co/kubectl-remote/</guid>
      <description>I use Minikube to run a local Kubernetes single node cluster (cluster?). However, I also work with a custom production cluster for work. This cluster consists of development and production nodes. I often need to switch between working on my local Minikube and the online Kubernetes cluster.
TIP: Visit the kubectl Cheat Sheet often.
 Support this blog! Buy my new book: Advanced Platform Development with Kubernetes  What You&#39;ll Learn Use data pipelines with MQTT, NiFi, Logstash, MinIO, Hive, Presto, Kafka and Elasticsearch Leverage Serverless ETL with OpenFaaS Explore Blockchain networking with Ethereum Support a multi-tenant Data Science platform with JupyterHub, MLflow and Seldon Core Build a Multi-cloud, Hybrid cluster, securely bridging on-premise and cloud-based Kubernetes nodes    The default configuration kubectl is stored in ~/.</description>
    </item>
    
  </channel>
</rss>