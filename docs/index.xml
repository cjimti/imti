<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>IMTI</title>
    <link>https://mk2.imti.co/</link>
    <description>Recent content on IMTI</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 11 Aug 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://mk2.imti.co/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kubernetes Port Forwarding for Local Development</title>
      <link>https://mk2.imti.co/kubernetes-port-forwarding/</link>
      <pubDate>Sat, 11 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mk2.imti.co/kubernetes-port-forwarding/</guid>
      <description>kubefwd helps to enable a seamless and efficient way to develop applications and services on a local workstation. Locally develop applications that intend to interact with other services in a Kubernetes cluster. kubefwd allows applications with connection strings like http://elasticsearch:9200/ or tcp://db:3306 to communicate into the remote cluster. kubefwd can be used to reduce or eliminate the need for local environment specific connection configurations.
Developing services in a Microservices architecture presents local development challenges, especially when the service you are developing needs to interact with a mixture of other services.</description>
    </item>
    
    <item>
      <title>FaaS on Kubernetes</title>
      <link>https://mk2.imti.co/fass-kubeless-kubernetes/</link>
      <pubDate>Sat, 28 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mk2.imti.co/fass-kubeless-kubernetes/</guid>
      <description>FaaS or Function as a Service also known as Serverless computing implementations are gaining popularity. Discussed often are the cost savings and each implementations relationship to the physical and network architecture of a specific platform or vendor. While many of the cost and infrastructure advantages of FaaS are compelling, its only one of many advantages. Below, I hope to demonstrate how easy it is to develop and deploy FaaS components into a custom Kubernetes cluster.</description>
    </item>
    
    <item>
      <title>Elasticsearch Essential Queries</title>
      <link>https://mk2.imti.co/elasticsearch-essential-queries/</link>
      <pubDate>Thu, 26 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mk2.imti.co/elasticsearch-essential-queries/</guid>
      <description>The following is an overview for querying Elasticsearch. Over the years I have tried to assemble developer notes for myself and my team on a variety of platforms, languages and frameworks, a type of cheat-sheet but with context, not a comprehensive how-to, but a decent 15-minute overview of the features we are most likely to implement in a given iteration.
Explore the Elasticsearch official documentation: Search in Depth.
 Contents     Motivation Following Along with Elasticsearch and Kubernetes Vocabulary Basic CRUD API  Delete an Index Create an Index Create or Update a Document (Upsert) Get a Document  Mappings, Types and Metadata  Get Mapping Create a Mapping  Searching Range Filtering Aggregations  Counts Averages, Minimums and Maximums Percentile Percent by Rank Percent by Rank Interval  Resources     Motivation My team and I work with a lot of SQL-based data, from MySQL, SQLite and even our large Cassandra cluster, however, our reporting systems are built on Elasticsearch.</description>
    </item>
    
    <item>
      <title>rSync Files on Interval</title>
      <link>https://mk2.imti.co/raspberry-pi-rsync-interval/</link>
      <pubDate>Mon, 02 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mk2.imti.co/raspberry-pi-rsync-interval/</guid>
      <description>A recurring requirement for my IOT projects involves keeping a set of files synced with a central server. Many of these projects include media players, kiosk systems, or applications that need frequently updated configuration files, all while entirely unattended, and in most cases unreachable through firewalls. I have one project that alone has 2000+ devices pulling media continuously from an rsync server. Many of these devices are on doggy wifi networks.</description>
    </item>
    
    <item>
      <title>Burn SD Images on MacOs</title>
      <link>https://mk2.imti.co/mac-cli-burn-images/</link>
      <pubDate>Sun, 01 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mk2.imti.co/mac-cli-burn-images/</guid>
      <description>Use your terminal to burn images fast and easy with dd. I do a lot of professional and hobby development for projects using devices such as Raspberry Pi, Orange Pi, Libre Computer, Tinker Board, etc. I run across a lot of tutorials with people downloading and using big GUI apps with clunky drag and drop interfaces to burn images.
It&amp;rsquo;s one command in your terminal. Technically, it&amp;rsquo;s three, but I don&amp;rsquo;t count listing and unmounting as the final act of burning.</description>
    </item>
    
    <item>
      <title>Kubernetes - 413 Request Entity Too Large</title>
      <link>https://mk2.imti.co/413-request-entity-too-large/</link>
      <pubDate>Sat, 24 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mk2.imti.co/413-request-entity-too-large/</guid>
      <description>When setting up nginx ingress on Kubernetes for a private Docker Registry, I ran into an error when trying to push an image to it.
Error parsing HTTP response: invalid character &#39;&amp;lt;&#39; looking for beginning of value: &amp;quot;&amp;lt;html&amp;gt;\r\n&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;413 Request Entity Too Large&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;\r\n&amp;lt;body bgcolor=\&amp;quot;white\&amp;quot;&amp;gt;\r\n&amp;lt;center&amp;gt;&amp;lt;h1&amp;gt;413 Request Entity Too Large&amp;lt;/h1&amp;gt;&amp;lt;/center&amp;gt;\r\n&amp;lt;hr&amp;gt;&amp;lt;center&amp;gt;nginx/1.9.14&amp;lt;/center&amp;gt;\r\n&amp;lt;/body&amp;gt;\r\n&amp;lt;/html&amp;gt;\r\n&amp;quot;  The &amp;ldquo;413 Request Entity Too Large&amp;rdquo; error is something many accustomed to running nginx as a standard web server/proxy. nginx is configured to restrict the size of files it will allow over a post.</description>
    </item>
    
    <item>
      <title>Kubernetes Remote Control</title>
      <link>https://mk2.imti.co/kubectl-remote/</link>
      <pubDate>Sat, 24 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mk2.imti.co/kubectl-remote/</guid>
      <description>I use Minikube to run a local Kubernetes single node cluster (cluster?). However, I also work with a custom production cluster for work. This cluster consists of development and production nodes. I often need to switch between working on my local Minikube and the online Kubernetes cluster.
TIP: Visit the kubectl Cheat Sheet often.
The default configuration kubectl is stored in ~/.kube/config and if you have Minikube installed, it added the context minikube to your config.</description>
    </item>
    
    <item>
      <title>Microservices &amp; Kubernetes</title>
      <link>https://mk2.imti.co/microservices/</link>
      <pubDate>Sat, 24 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mk2.imti.co/microservices/</guid>
      <description>The following is a collection of articles, videos, and notes on Microservices. The Microservices architecture is a variant of the service-oriented architecture, a collection of loosely coupled services.
Articles  Background concept - &amp;ldquo;Open Data: Small Pieces Loosely Joined&amp;rdquo;, Tim Oâ€™Reilly Modern software design problems and solutions - &amp;ldquo;12-Fractured Apps&amp;rdquo;, Kelsey Hightower (SysAdmin @ Google) 12-Factor Defined - &amp;ldquo;The 12-Factor App&amp;rdquo;, Adam Wiggins Pros and Cons of Microservices - &amp;ldquo;Microservices&amp;rdquo; and Microservice Trade-Offs, Martin Fowler &amp;ldquo;What are containers and why do you need them?</description>
    </item>
    
    <item>
      <title>Don&#39;t Install Emacs</title>
      <link>https://mk2.imti.co/dont-install-emacs/</link>
      <pubDate>Thu, 01 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mk2.imti.co/dont-install-emacs/</guid>
      <description>I grew up on emacs. One of my first jobs I sat down at a terminal and was editing some files with pico, it&amp;rsquo;s what I knew since I used that fantastic email client pine. I was quickly told by my the lead developer that I need to use a real text editor if I&amp;rsquo;m going to progress in my career. He told me I need to try emacs, and after suffering through a few weeks of memorizing multi command-char sequences and training the muscle memory in my pinky to perform bizarre contortions of my left hand just to save my file, I became a convert.</description>
    </item>
    
    <item>
      <title>Don&#39;t Install cqlsh</title>
      <link>https://mk2.imti.co/dont-install-cqlsh/</link>
      <pubDate>Thu, 01 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mk2.imti.co/dont-install-cqlsh/</guid>
      <description>We live in a world of process isolation and tools that make utilizing it extremely simple, with apps like Docker we can perform dependency management with dependency isolation. As I am slowly becoming a fanboy of containerization, I look forward to the day when typing ps on my local workstation or remote server is nearly synonymous with commands like docker ps or kubectl get services.
Case: Cassandra development and your local workstation.</description>
    </item>
    
    <item>
      <title>Kubernetes Overview</title>
      <link>https://mk2.imti.co/kubernetes/</link>
      <pubDate>Thu, 01 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mk2.imti.co/kubernetes/</guid>
      <description>Getting started with Kubernetes for local development. I develop on a Mac however much of this is easily translated to windows.
The following is primarily a getting started guide wrapped around my personal development notes. This set of notes are specifically for my co-workers in helping them get up to speed quickly. If you see an error feel free to make a pull request or just add an issue.</description>
    </item>
    
  </channel>
</rss>